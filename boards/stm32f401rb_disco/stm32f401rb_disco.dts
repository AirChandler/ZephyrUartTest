/*
 * Copyright (c) 2017 Linaro Limited
 * Copyright (c) 2019 Centaur Analytics, Inc
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <st/f4/stm32f401Xb.dtsi>
#include <st/f4/stm32f401r(b-c)tx-pinctrl.dtsi>

/ {
	model = "STMicroelectronics STM32F401RB-DISCO board";
	compatible = "st,stm32f401rb-disco";

	chosen {
		zephyr,console = &usart2;
		zephyr,shell-uart = &usart2;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
		/* other chosen settings  for your hardware */
	};

	/*
    * Your board-specific hardware: buttons, LEDs, sensors, etc.
    */

	leds {
		compatible = "gpio-leds";
		led0: led_0 {
			gpios = <&gpiob 6 GPIO_ACTIVE_HIGH>;
			label = "test led0";
		};
		led1: led_1 {
			gpios = <&gpiob 14 GPIO_ACTIVE_HIGH>;
			label = "test led1";
		};
	};

	pwmleds {
		compatible = "pwm-leds";
		green_pwm_led: green_pwm_led {
			pwms = <&pwm2 1 0 PWM_POLARITY_NORMAL>;
		};
	};

	gpio_keys {
		compatible = "gpio-keys";
	};

	/* These aliases are provided for compatibility with samples */
	aliases {
		led0 = &led0;
		led1 = &led1;
		pwm-led0 = &green_pwm_led;
	};
};

/* Clock Setup (cross-ref with stm32cubemx) */

&clk_hse {
	//hse-bypass;
	clock-frequency = <DT_FREQ_M(16)>; /* STLink 8MHz clock */
	status = "okay";
};

&pll {
	div-m = <8>;
	mul-n = <84>;
	div-p = <2>;
	div-q = <4>;
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(84)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <2>;
	apb2-prescaler = <1>;
};

/* EEPROM flash setup */

&flash0 {

	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x00000000 0x00010000>;
			read-only;
		};

		/*
		 * The flash starting at offset 0x10000 and ending at
		 * offset 0x1ffff is reserved for use by the application.
		 */
		slot0_partition: partition@20000 {
			label = "image-0";
			reg = <0x00020000 0x00020000>;
		};
		slot1_partition: partition@40000 {
			label = "image-1";
			reg = <0x00040000 0x00020000>;
		};
		scratch_partition: partition@60000 {
			label = "image-scratch";
			reg = <0x00060000 0x00020000>;
		};
	};
};

/* Peripherals you want to enable like a GPIO or SPI controller */

/* UART Backplane */
&usart1 {
	pinctrl-0 = <&usart1_tx_pa9 &usart1_rx_pa10>;
	current-speed = <4000000>;
	status = "okay";
};

/* UART Ext 1 */
&usart2 {
	pinctrl-0 = <&usart2_tx_pa2 &usart2_rx_pa3>;
	current-speed = <115200>;
	dmas = <&dma1 5 1 0x30040 0x3>,
			<&dma1 6 1 0x30080 0x3>;
	dma-names = "tx", "rx";
	status = "okay";
};

/* UART Ext 2 */
&usart6 {
	pinctrl-0 = <&usart6_tx_pc6 &usart6_rx_pc7>;
	current-speed = <115200>;
	dmas = <&dma2 1 1 0x30040 0x3>,
			<&dma2 6 1 0x30080 0x3>;
	dma-names = "tx", "rx";
	status = "okay";
};

&timers2 {
	status = "okay";

	pwm2: pwm {
		status = "okay";
		pinctrl-0 = <&tim2_ch1_pa5>;
	};
};

&rtc {
	status = "okay";
};

&adc1 {
	pinctrl-0 = <&adc1_in0_pa0>;
	status = "okay";
};

&wwdg {
	status = "okay";
};

&dma1 {
	status = "okay";
};

&dma2 {
	status = "okay";
};
